{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _jsxFileName = \"D:\\\\react project\\\\homiApp\\\\homi\\\\node_modules\\\\react-native-radio-buttons\\\\lib\\\\radio-buttons.js\";\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar PropTypes = require('prop-types');\n\nvar Text = ReactNative.Text,\n    TouchableWithoutFeedback = ReactNative.TouchableWithoutFeedback,\n    View = ReactNative.View;\nvar propTypes = {\n  options: PropTypes.array.isRequired,\n  testOptionEqual: PropTypes.func,\n  renderOption: PropTypes.func,\n  renderContainer: PropTypes.func,\n  onSelection: PropTypes.func\n};\n\nvar RadioButtons = function (_React$Component) {\n  _inherits(RadioButtons, _React$Component);\n\n  function RadioButtons() {\n    var _this;\n\n    _classCallCheck(this, RadioButtons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RadioButtons).call(this));\n    _this.state = {\n      selectedOption: null,\n      selectedIndex: null\n    };\n    return _this;\n  }\n\n  _createClass(RadioButtons, [{\n    key: \"copySelectedOptionFromProps\",\n    value: function copySelectedOptionFromProps(_ref) {\n      var selectedOption = _ref.selectedOption,\n          selectedIndex = _ref.selectedIndex;\n      this.setState({\n        selectedOption: selectedOption,\n        selectedIndex: selectedIndex\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.copySelectedOptionFromProps(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.copySelectedOptionFromProps(newProps);\n    }\n  }, {\n    key: \"selectOption\",\n    value: function selectOption(selectedOption, selectedIndex) {\n      this.setState({\n        selectedOption: selectedOption,\n        selectedIndex: selectedIndex\n      });\n      this.props.onSelection(selectedOption, selectedIndex);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedOption = _this$state.selectedOption,\n          selectedIndex = _this$state.selectedIndex;\n      var children = this.props.options.map(function (option, index) {\n        var isSelected = selectedIndex === index || this.props.testOptionEqual(selectedOption, option);\n        var onSelection = this.selectOption.bind(this, option, index);\n        return this.props.renderOption(option, isSelected, onSelection, index);\n      }.bind(this));\n      return this.props.renderContainer(children);\n    }\n  }], [{\n    key: \"getTextOptionRenderer\",\n    value: function getTextOptionRenderer(normalStyle, selectedStyle, extractText) {\n      return function renderOption(option, selected, onSelect, index) {\n        var style = selected ? selectedStyle : normalStyle;\n        var label = extractText ? extractText(option) : option;\n        return React.createElement(TouchableWithoutFeedback, {\n          onPress: onSelect,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          }\n        }, React.createElement(Text, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          }\n        }, label));\n      };\n    }\n  }, {\n    key: \"getViewContainerRenderer\",\n    value: function getViewContainerRenderer(style) {\n      return function renderContainer(options) {\n        return React.createElement(View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, options);\n      };\n    }\n  }]);\n\n  return RadioButtons;\n}(React.Component);\n\nRadioButtons.renderHorizontalContainer = RadioButtons.getViewContainerRenderer({\n  flexDirection: 'row'\n});\nRadioButtons.renderVerticalContainer = RadioButtons.getViewContainerRenderer({\n  flexDirection: 'column'\n});\nRadioButtons.defaultProps = {\n  testOptionEqual: function testOptionEqual(a, b) {\n    return a === b;\n  },\n  renderOption: RadioButtons.getTextOptionRenderer({}, {\n    fontWeight: 'bold'\n  }),\n  renderContainer: RadioButtons.renderVerticalContainer,\n  onSelection: function onSelection(option) {}\n};\nRadioButtons.propTypes = propTypes;\nmodule.exports = RadioButtons;","map":{"version":3,"sources":["D:/react project/homiApp/homi/node_modules/react-native-radio-buttons/lib/radio-buttons.js"],"names":["React","require","PropTypes","Text","ReactNative","TouchableWithoutFeedback","View","propTypes","options","array","isRequired","testOptionEqual","func","renderOption","renderContainer","onSelection","RadioButtons","state","selectedOption","selectedIndex","setState","copySelectedOptionFromProps","props","newProps","children","map","option","index","isSelected","selectOption","bind","normalStyle","selectedStyle","extractText","selected","onSelect","style","label","Component","renderHorizontalContainer","getViewContainerRenderer","flexDirection","renderVerticalContainer","defaultProps","a","b","getTextOptionRenderer","fontWeight","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nvar React = require('react');\nvar ReactNative = require('react-native');\nvar PropTypes = require('prop-types');\n\nconst {\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} = ReactNative;\n\nconst propTypes = {\n  options: PropTypes.array.isRequired,\n  testOptionEqual: PropTypes.func,\n  renderOption: PropTypes.func,\n  renderContainer: PropTypes.func,\n  onSelection: PropTypes.func,\n};\n\nclass RadioButtons extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      selectedOption: null,\n      selectedIndex: null,\n    };\n  }\n\n  copySelectedOptionFromProps({selectedOption, selectedIndex}){\n    this.setState({\n      selectedOption,\n      selectedIndex,\n    });\n  }\n\n  componentWillMount(){\n    this.copySelectedOptionFromProps(this.props);\n  }\n\n  componentWillReceiveProps(newProps){\n    this.copySelectedOptionFromProps(newProps);\n  }\n\n  selectOption(selectedOption, selectedIndex){\n    this.setState({\n      selectedOption,\n      selectedIndex,\n    });\n    this.props.onSelection(selectedOption, selectedIndex);\n  }\n\n  render() {\n    const {selectedOption, selectedIndex} = this.state;\n\n    const children = this.props.options.map(function(option, index){\n      const isSelected = selectedIndex === index || this.props.testOptionEqual(selectedOption, option);\n      const onSelection = this.selectOption.bind(this, option, index);\n\n      return this.props.renderOption(option, isSelected, onSelection, index);\n    }.bind(this));\n\n    return this.props.renderContainer(children);\n  }\n\n  static getTextOptionRenderer(normalStyle, selectedStyle, extractText) {\n    return function renderOption(option, selected, onSelect, index){\n      const style = selected ? selectedStyle : normalStyle;\n      const label = extractText ? extractText(option) : option;\n      return (\n        <TouchableWithoutFeedback onPress={onSelect} key={index}>\n          <Text style={style}>{label}</Text>\n        </TouchableWithoutFeedback>\n      );\n    };\n  }\n  static getViewContainerRenderer(style) {\n    return function renderContainer(options){\n      return <View style={style}>{options}</View>;\n    };\n  }\n}\n\nRadioButtons.renderHorizontalContainer = RadioButtons.getViewContainerRenderer({\n  flexDirection: 'row',\n});\n\nRadioButtons.renderVerticalContainer = RadioButtons.getViewContainerRenderer({\n  flexDirection: 'column'\n});\n\nRadioButtons.defaultProps = {\n  testOptionEqual(a, b){\n    return a === b;\n  },\n  renderOption: RadioButtons.getTextOptionRenderer({}, { fontWeight: 'bold' }),\n  renderContainer: RadioButtons.renderVerticalContainer,\n  onSelection(option){}\n};\nRadioButtons.propTypes = propTypes;\n\nmodule.exports = RadioButtons;\n"]},"metadata":{},"sourceType":"script"}