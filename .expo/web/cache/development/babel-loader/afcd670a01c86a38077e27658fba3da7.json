{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\react project\\\\homiApp\\\\homi\\\\node_modules\\\\react-native-chart-kit\\\\src\\\\contribution-graph\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg, G, Text, Rect } from \"react-native-svg\";\nimport _ from \"lodash\";\nimport AbstractChart from \"../abstract-chart\";\nimport { DAYS_IN_WEEK, MILLISECONDS_IN_ONE_DAY, MONTH_LABELS } from \"./constants\";\nimport { shiftDate, getBeginningTimeForDate, convertToDate } from \"./dateHelpers\";\nvar SQUARE_SIZE = 20;\nvar MONTH_LABEL_GUTTER_SIZE = 8;\nvar paddingLeft = 32;\n\nvar ContributionGraph = function (_AbstractChart) {\n  _inherits(ContributionGraph, _AbstractChart);\n\n  function ContributionGraph(props) {\n    var _this;\n\n    _classCallCheck(this, ContributionGraph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContributionGraph).call(this, props));\n    _this.state = {\n      valueCache: _this.getValueCache(props.values)\n    };\n    return _this;\n  }\n\n  _createClass(ContributionGraph, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        valueCache: this.getValueCache(nextProps.values)\n      });\n    }\n  }, {\n    key: \"getSquareSizeWithGutter\",\n    value: function getSquareSizeWithGutter() {\n      return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n    }\n  }, {\n    key: \"getMonthLabelSize\",\n    value: function getMonthLabelSize() {\n      var _this$props$squareSiz = this.props.squareSize,\n          squareSize = _this$props$squareSiz === void 0 ? SQUARE_SIZE : _this$props$squareSiz;\n\n      if (!this.props.showMonthLabels) {\n        return 0;\n      }\n\n      if (this.props.horizontal) {\n        return squareSize + MONTH_LABEL_GUTTER_SIZE;\n      }\n\n      return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n    }\n  }, {\n    key: \"getStartDate\",\n    value: function getStartDate() {\n      return shiftDate(this.getEndDate(), -this.props.numDays + 1);\n    }\n  }, {\n    key: \"getEndDate\",\n    value: function getEndDate() {\n      return getBeginningTimeForDate(convertToDate(this.props.endDate));\n    }\n  }, {\n    key: \"getStartDateWithEmptyDays\",\n    value: function getStartDateWithEmptyDays() {\n      return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n    }\n  }, {\n    key: \"getNumEmptyDaysAtStart\",\n    value: function getNumEmptyDaysAtStart() {\n      return this.getStartDate().getDay();\n    }\n  }, {\n    key: \"getNumEmptyDaysAtEnd\",\n    value: function getNumEmptyDaysAtEnd() {\n      return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n    }\n  }, {\n    key: \"getWeekCount\",\n    value: function getWeekCount() {\n      var numDaysRoundedToWeek = this.props.numDays + this.getNumEmptyDaysAtStart() + this.getNumEmptyDaysAtEnd();\n      return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n    }\n  }, {\n    key: \"getWeekWidth\",\n    value: function getWeekWidth() {\n      return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.getWeekCount() * this.getSquareSizeWithGutter() - this.props.gutterSize;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize);\n    }\n  }, {\n    key: \"getValueCache\",\n    value: function getValueCache(values) {\n      var _this2 = this;\n\n      return values.reduce(function (memo, value) {\n        var date = convertToDate(value.date);\n        var index = Math.floor((date - _this2.getStartDateWithEmptyDays()) / MILLISECONDS_IN_ONE_DAY);\n        memo[index] = {\n          value: value,\n          title: _this2.props.titleForValue ? _this2.props.titleForValue(value) : null,\n          tooltipDataAttrs: _this2.getTooltipDataAttrsForValue(value)\n        };\n        return memo;\n      }, {});\n    }\n  }, {\n    key: \"getValueForIndex\",\n    value: function getValueForIndex(index) {\n      if (this.state.valueCache[index]) {\n        return this.state.valueCache[index].value;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getClassNameForIndex\",\n    value: function getClassNameForIndex(index) {\n      if (this.state.valueCache[index]) {\n        if (this.state.valueCache[index].value) {\n          var count = this.state.valueCache[index].value.count;\n\n          if (count) {\n            var opacity = (count * 0.15 > 1 ? 1 : count * 0.15) + 0.15;\n            return this.props.chartConfig.color(opacity);\n          }\n        }\n      }\n\n      return this.props.chartConfig.color(0.15);\n    }\n  }, {\n    key: \"getTitleForIndex\",\n    value: function getTitleForIndex(index) {\n      if (this.state.valueCache[index]) {\n        return this.state.valueCache[index].title;\n      }\n\n      return this.props.titleForValue ? this.props.titleForValue(null) : null;\n    }\n  }, {\n    key: \"getTooltipDataAttrsForIndex\",\n    value: function getTooltipDataAttrsForIndex(index) {\n      if (this.state.valueCache[index]) {\n        return this.state.valueCache[index].tooltipDataAttrs;\n      }\n\n      return this.getTooltipDataAttrsForValue({\n        date: null,\n        count: null\n      });\n    }\n  }, {\n    key: \"getTooltipDataAttrsForValue\",\n    value: function getTooltipDataAttrsForValue(value) {\n      var tooltipDataAttrs = this.props.tooltipDataAttrs;\n\n      if (typeof tooltipDataAttrs === \"function\") {\n        return tooltipDataAttrs(value);\n      }\n\n      return tooltipDataAttrs;\n    }\n  }, {\n    key: \"getTransformForWeek\",\n    value: function getTransformForWeek(weekIndex) {\n      if (this.props.horizontal) {\n        return [weekIndex * this.getSquareSizeWithGutter(), 50];\n      }\n\n      return [10, weekIndex * this.getSquareSizeWithGutter()];\n    }\n  }, {\n    key: \"getTransformForMonthLabels\",\n    value: function getTransformForMonthLabels() {\n      if (this.props.horizontal) {\n        return null;\n      }\n\n      return this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE + \", 0\";\n    }\n  }, {\n    key: \"getTransformForAllWeeks\",\n    value: function getTransformForAllWeeks() {\n      if (this.props.horizontal) {\n        return \"0, \" + (this.getMonthLabelSize() - 100);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getViewBox\",\n    value: function getViewBox() {\n      if (this.props.horizontal) {\n        return this.getWidth() + \" \" + this.getHeight();\n      }\n\n      return this.getHeight() + \" \" + this.getWidth();\n    }\n  }, {\n    key: \"getSquareCoordinates\",\n    value: function getSquareCoordinates(dayIndex) {\n      if (this.props.horizontal) {\n        return [0, dayIndex * this.getSquareSizeWithGutter()];\n      }\n\n      return [dayIndex * this.getSquareSizeWithGutter(), 0];\n    }\n  }, {\n    key: \"getMonthLabelCoordinates\",\n    value: function getMonthLabelCoordinates(weekIndex) {\n      if (this.props.horizontal) {\n        return [weekIndex * this.getSquareSizeWithGutter(), this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE];\n      }\n\n      var verticalOffset = -2;\n      return [0, (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset];\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value) {\n      if (this.props.onClick) {\n        this.props.onClick(value);\n      }\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(dayIndex, index) {\n      var indexOutOfRange = index < this.getNumEmptyDaysAtStart() || index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n\n      if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n        return null;\n      }\n\n      var _this$getSquareCoordi = this.getSquareCoordinates(dayIndex),\n          _this$getSquareCoordi2 = _slicedToArray(_this$getSquareCoordi, 2),\n          x = _this$getSquareCoordi2[0],\n          y = _this$getSquareCoordi2[1];\n\n      var _this$props$squareSiz2 = this.props.squareSize,\n          squareSize = _this$props$squareSiz2 === void 0 ? SQUARE_SIZE : _this$props$squareSiz2;\n      return React.createElement(Rect, _extends({\n        key: index,\n        width: squareSize,\n        height: squareSize,\n        x: x + paddingLeft,\n        y: y,\n        title: this.getTitleForIndex(index),\n        fill: this.getClassNameForIndex(index)\n      }, this.getTooltipDataAttrsForIndex(index), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      }));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(weekIndex) {\n      var _this3 = this;\n\n      var _this$getTransformFor = this.getTransformForWeek(weekIndex),\n          _this$getTransformFor2 = _slicedToArray(_this$getTransformFor, 2),\n          x = _this$getTransformFor2[0],\n          y = _this$getTransformFor2[1];\n\n      return React.createElement(G, {\n        key: weekIndex,\n        x: x,\n        y: y,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      }, _.range(DAYS_IN_WEEK).map(function (dayIndex) {\n        return _this3.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex);\n      }));\n    }\n  }, {\n    key: \"renderAllWeeks\",\n    value: function renderAllWeeks() {\n      var _this4 = this;\n\n      return _.range(this.getWeekCount()).map(function (weekIndex) {\n        return _this4.renderWeek(weekIndex);\n      });\n    }\n  }, {\n    key: \"renderMonthLabels\",\n    value: function renderMonthLabels() {\n      var _this5 = this;\n\n      if (!this.props.showMonthLabels) {\n        return null;\n      }\n\n      var weekRange = _.range(this.getWeekCount() - 1);\n\n      return weekRange.map(function (weekIndex) {\n        var endOfWeek = shiftDate(_this5.getStartDateWithEmptyDays(), (weekIndex + 1) * DAYS_IN_WEEK);\n\n        var _this5$getMonthLabelC = _this5.getMonthLabelCoordinates(weekIndex),\n            _this5$getMonthLabelC2 = _slicedToArray(_this5$getMonthLabelC, 2),\n            x = _this5$getMonthLabelC2[0],\n            y = _this5$getMonthLabelC2[1];\n\n        return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? React.createElement(Text, _extends({\n          key: weekIndex,\n          x: x + paddingLeft,\n          y: y + 8\n        }, _this5.getPropsForLabels(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          }\n        }), MONTH_LABELS[endOfWeek.getMonth()]) : null;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$style = this.props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius;\n\n      if (!borderRadius && this.props.chartConfig.style) {\n        var stupidXo = this.props.chartConfig.style.borderRadius;\n        borderRadius = stupidXo;\n      }\n\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        }\n      }, React.createElement(Svg, {\n        height: this.props.height,\n        width: this.props.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        }\n      }, this.renderDefs(_objectSpread({\n        width: this.props.width,\n        height: this.props.height\n      }, this.props.chartConfig)), React.createElement(Rect, {\n        width: \"100%\",\n        height: this.props.height,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        }\n      }), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        }\n      }, this.renderMonthLabels()), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        }\n      }, this.renderAllWeeks())));\n    }\n  }]);\n\n  return ContributionGraph;\n}(AbstractChart);\n\nContributionGraph.ViewPropTypes = {\n  values: PropTypes.arrayOf(PropTypes.shape({\n    date: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]).isRequired\n  }).isRequired).isRequired,\n  numDays: PropTypes.number,\n  endDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.instanceOf(Date)]),\n  gutterSize: PropTypes.number,\n  squareSize: PropTypes.number,\n  horizontal: PropTypes.bool,\n  showMonthLabels: PropTypes.bool,\n  showOutOfRangeDays: PropTypes.bool,\n  tooltipDataAttrs: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  titleForValue: PropTypes.func,\n  classForValue: PropTypes.func,\n  onClick: PropTypes.func\n};\nContributionGraph.defaultProps = {\n  numDays: 200,\n  endDate: new Date(),\n  gutterSize: 1,\n  squareSize: SQUARE_SIZE,\n  horizontal: true,\n  showMonthLabels: true,\n  showOutOfRangeDays: false,\n  classForValue: function classForValue(value) {\n    return value ? \"black\" : \"#8cc665\";\n  }\n};\nexport default ContributionGraph;","map":{"version":3,"sources":["D:/react project/homiApp/homi/node_modules/react-native-chart-kit/src/contribution-graph/index.js"],"names":["React","PropTypes","Svg","G","Text","Rect","_","AbstractChart","DAYS_IN_WEEK","MILLISECONDS_IN_ONE_DAY","MONTH_LABELS","shiftDate","getBeginningTimeForDate","convertToDate","SQUARE_SIZE","MONTH_LABEL_GUTTER_SIZE","paddingLeft","ContributionGraph","props","state","valueCache","getValueCache","values","nextProps","setState","squareSize","gutterSize","showMonthLabels","horizontal","getEndDate","numDays","endDate","getStartDate","getNumEmptyDaysAtStart","getDay","numDaysRoundedToWeek","getNumEmptyDaysAtEnd","Math","ceil","getSquareSizeWithGutter","getWeekCount","getWeekWidth","getMonthLabelSize","reduce","memo","value","date","index","floor","getStartDateWithEmptyDays","title","titleForValue","tooltipDataAttrs","getTooltipDataAttrsForValue","count","opacity","chartConfig","color","weekIndex","getWidth","getHeight","dayIndex","verticalOffset","onClick","indexOutOfRange","showOutOfRangeDays","getSquareCoordinates","x","y","getTitleForIndex","getClassNameForIndex","getTooltipDataAttrsForIndex","getTransformForWeek","range","map","renderSquare","renderWeek","weekRange","endOfWeek","getMonthLabelCoordinates","getDate","getPropsForLabels","getMonth","style","borderRadius","stupidXo","height","width","renderDefs","renderMonthLabels","renderAllWeeks","ViewPropTypes","arrayOf","shape","oneOfType","string","number","instanceOf","Date","isRequired","bool","object","func","classForValue","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,GAAT,EAAcC,CAAd,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,kBAAnC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP;AACA,SACEC,YADF,EAEEC,uBAFF,EAGEC,YAHF;AAKA,SACEC,SADF,EAEEC,uBAFF,EAGEC,aAHF;AAMA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,uBAAuB,GAAG,CAAhC;AACA,IAAMC,WAAW,GAAG,EAApB;;IACMC,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,MAAKC,aAAL,CAAmBH,KAAK,CAACI,MAAzB;AADD,KAAb;AAFiB;AAKlB;;;;8CAEyBC,S,EAAW;AACnC,WAAKC,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAE,KAAKC,aAAL,CAAmBE,SAAS,CAACD,MAA7B;AADA,OAAd;AAGD;;;8CAEyB;AACxB,aAAO,CAAC,KAAKJ,KAAL,CAAWO,UAAX,IAAyBX,WAA1B,IAAyC,KAAKI,KAAL,CAAWQ,UAA3D;AACD;;;wCAEmB;AAAA,kCACiB,KAAKR,KADtB,CACZO,UADY;AAAA,UACZA,UADY,sCACCX,WADD;;AAElB,UAAI,CAAC,KAAKI,KAAL,CAAWS,eAAhB,EAAiC;AAC/B,eAAO,CAAP;AACD;;AACD,UAAI,KAAKT,KAAL,CAAWU,UAAf,EAA2B;AACzB,eAAOH,UAAU,GAAGV,uBAApB;AACD;;AACD,aAAO,KAAKU,UAAU,GAAGV,uBAAlB,CAAP;AACD;;;mCAEc;AACb,aAAOJ,SAAS,CAAC,KAAKkB,UAAL,EAAD,EAAoB,CAAC,KAAKX,KAAL,CAAWY,OAAZ,GAAsB,CAA1C,CAAhB;AACD;;;iCAEY;AACX,aAAOlB,uBAAuB,CAACC,aAAa,CAAC,KAAKK,KAAL,CAAWa,OAAZ,CAAd,CAA9B;AACD;;;gDAE2B;AAC1B,aAAOpB,SAAS,CAAC,KAAKqB,YAAL,EAAD,EAAsB,CAAC,KAAKC,sBAAL,EAAvB,CAAhB;AACD;;;6CAEwB;AACvB,aAAO,KAAKD,YAAL,GAAoBE,MAApB,EAAP;AACD;;;2CAEsB;AACrB,aAAO1B,YAAY,GAAG,CAAf,GAAmB,KAAKqB,UAAL,GAAkBK,MAAlB,EAA1B;AACD;;;mCAEc;AACb,UAAMC,oBAAoB,GACxB,KAAKjB,KAAL,CAAWY,OAAX,GACA,KAAKG,sBAAL,EADA,GAEA,KAAKG,oBAAL,EAHF;AAIA,aAAOC,IAAI,CAACC,IAAL,CAAUH,oBAAoB,GAAG3B,YAAjC,CAAP;AACD;;;mCAEc;AACb,aAAOA,YAAY,GAAG,KAAK+B,uBAAL,EAAtB;AACD;;;+BAEU;AACT,aACE,KAAKC,YAAL,KAAsB,KAAKD,uBAAL,EAAtB,GACA,KAAKrB,KAAL,CAAWQ,UAFb;AAID;;;gCAEW;AACV,aACE,KAAKe,YAAL,MAAuB,KAAKC,iBAAL,KAA2B,KAAKxB,KAAL,CAAWQ,UAA7D,CADF;AAGD;;;kCAEaJ,M,EAAQ;AAAA;;AACpB,aAAOA,MAAM,CAACqB,MAAP,CAAc,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACpC,YAAMC,IAAI,GAAGjC,aAAa,CAACgC,KAAK,CAACC,IAAP,CAA1B;AACA,YAAMC,KAAK,GAAGV,IAAI,CAACW,KAAL,CACZ,CAACF,IAAI,GAAG,MAAI,CAACG,yBAAL,EAAR,IAA4CxC,uBADhC,CAAd;AAGAmC,QAAAA,IAAI,CAACG,KAAD,CAAJ,GAAc;AACZF,UAAAA,KAAK,EAALA,KADY;AAEZK,UAAAA,KAAK,EAAE,MAAI,CAAChC,KAAL,CAAWiC,aAAX,GACH,MAAI,CAACjC,KAAL,CAAWiC,aAAX,CAAyBN,KAAzB,CADG,GAEH,IAJQ;AAKZO,UAAAA,gBAAgB,EAAE,MAAI,CAACC,2BAAL,CAAiCR,KAAjC;AALN,SAAd;AAOA,eAAOD,IAAP;AACD,OAbM,EAaJ,EAbI,CAAP;AAcD;;;qCAEgBG,K,EAAO;AACtB,UAAI,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,CAAJ,EAAkC;AAChC,eAAO,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,EAA6BF,KAApC;AACD;;AACD,aAAO,IAAP;AACD;;;yCAEoBE,K,EAAO;AAC1B,UAAI,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,CAAJ,EAAkC;AAChC,YAAI,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,EAA6BF,KAAjC,EAAwC;AACtC,cAAMS,KAAK,GAAG,KAAKnC,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,EAA6BF,KAA7B,CAAmCS,KAAjD;;AACA,cAAIA,KAAJ,EAAW;AACT,gBAAMC,OAAO,GAAG,CAACD,KAAK,GAAG,IAAR,GAAe,CAAf,GAAmB,CAAnB,GAAuBA,KAAK,GAAG,IAAhC,IAAwC,IAAxD;AACA,mBAAO,KAAKpC,KAAL,CAAWsC,WAAX,CAAuBC,KAAvB,CAA6BF,OAA7B,CAAP;AACD;AACF;AACF;;AACD,aAAO,KAAKrC,KAAL,CAAWsC,WAAX,CAAuBC,KAAvB,CAA6B,IAA7B,CAAP;AACD;;;qCAEgBV,K,EAAO;AACtB,UAAI,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,CAAJ,EAAkC;AAChC,eAAO,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,EAA6BG,KAApC;AACD;;AACD,aAAO,KAAKhC,KAAL,CAAWiC,aAAX,GAA2B,KAAKjC,KAAL,CAAWiC,aAAX,CAAyB,IAAzB,CAA3B,GAA4D,IAAnE;AACD;;;gDAE2BJ,K,EAAO;AACjC,UAAI,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,CAAJ,EAAkC;AAChC,eAAO,KAAK5B,KAAL,CAAWC,UAAX,CAAsB2B,KAAtB,EAA6BK,gBAApC;AACD;;AACD,aAAO,KAAKC,2BAAL,CAAiC;AAAEP,QAAAA,IAAI,EAAE,IAAR;AAAcQ,QAAAA,KAAK,EAAE;AAArB,OAAjC,CAAP;AACD;;;gDAE2BT,K,EAAO;AAAA,UACzBO,gBADyB,GACJ,KAAKlC,KADD,CACzBkC,gBADyB;;AAGjC,UAAI,OAAOA,gBAAP,KAA4B,UAAhC,EAA4C;AAC1C,eAAOA,gBAAgB,CAACP,KAAD,CAAvB;AACD;;AACD,aAAOO,gBAAP;AACD;;;wCAEmBM,S,EAAW;AAC7B,UAAI,KAAKxC,KAAL,CAAWU,UAAf,EAA2B;AACzB,eAAO,CAAC8B,SAAS,GAAG,KAAKnB,uBAAL,EAAb,EAA6C,EAA7C,CAAP;AACD;;AACD,aAAO,CAAC,EAAD,EAAKmB,SAAS,GAAG,KAAKnB,uBAAL,EAAjB,CAAP;AACD;;;iDAE4B;AAC3B,UAAI,KAAKrB,KAAL,CAAWU,UAAf,EAA2B;AACzB,eAAO,IAAP;AACD;;AACD,aAAU,KAAKa,YAAL,KAAsB1B,uBAAhC;AACD;;;8CAEyB;AACxB,UAAI,KAAKG,KAAL,CAAWU,UAAf,EAA2B;AACzB,wBAAa,KAAKc,iBAAL,KAA2B,GAAxC;AACD;;AACD,aAAO,IAAP;AACD;;;iCAEY;AACX,UAAI,KAAKxB,KAAL,CAAWU,UAAf,EAA2B;AACzB,eAAU,KAAK+B,QAAL,EAAV,SAA6B,KAAKC,SAAL,EAA7B;AACD;;AACD,aAAU,KAAKA,SAAL,EAAV,SAA8B,KAAKD,QAAL,EAA9B;AACD;;;yCAEoBE,Q,EAAU;AAC7B,UAAI,KAAK3C,KAAL,CAAWU,UAAf,EAA2B;AACzB,eAAO,CAAC,CAAD,EAAIiC,QAAQ,GAAG,KAAKtB,uBAAL,EAAf,CAAP;AACD;;AACD,aAAO,CAACsB,QAAQ,GAAG,KAAKtB,uBAAL,EAAZ,EAA4C,CAA5C,CAAP;AACD;;;6CAEwBmB,S,EAAW;AAClC,UAAI,KAAKxC,KAAL,CAAWU,UAAf,EAA2B;AACzB,eAAO,CACL8B,SAAS,GAAG,KAAKnB,uBAAL,EADP,EAEL,KAAKG,iBAAL,KAA2B3B,uBAFtB,CAAP;AAID;;AACD,UAAM+C,cAAc,GAAG,CAAC,CAAxB;AACA,aAAO,CACL,CADK,EAEL,CAACJ,SAAS,GAAG,CAAb,IAAkB,KAAKnB,uBAAL,EAAlB,GAAmDuB,cAF9C,CAAP;AAID;;;gCAEWjB,K,EAAO;AACjB,UAAI,KAAK3B,KAAL,CAAW6C,OAAf,EAAwB;AACtB,aAAK7C,KAAL,CAAW6C,OAAX,CAAmBlB,KAAnB;AACD;AACF;;;iCAEYgB,Q,EAAUd,K,EAAO;AAC5B,UAAMiB,eAAe,GACnBjB,KAAK,GAAG,KAAKd,sBAAL,EAAR,IACAc,KAAK,IAAI,KAAKd,sBAAL,KAAgC,KAAKf,KAAL,CAAWY,OAFtD;;AAGA,UAAIkC,eAAe,IAAI,CAAC,KAAK9C,KAAL,CAAW+C,kBAAnC,EAAuD;AACrD,eAAO,IAAP;AACD;;AAN2B,kCAOb,KAAKC,oBAAL,CAA0BL,QAA1B,CAPa;AAAA;AAAA,UAOrBM,CAPqB;AAAA,UAOlBC,CAPkB;;AAAA,mCAQS,KAAKlD,KARd,CAQpBO,UARoB;AAAA,UAQpBA,UARoB,uCAQPX,WARO;AAS5B,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEiC,KADP;AAEE,QAAA,KAAK,EAAEtB,UAFT;AAGE,QAAA,MAAM,EAAEA,UAHV;AAIE,QAAA,CAAC,EAAE0C,CAAC,GAAGnD,WAJT;AAKE,QAAA,CAAC,EAAEoD,CALL;AAME,QAAA,KAAK,EAAE,KAAKC,gBAAL,CAAsBtB,KAAtB,CANT;AAOE,QAAA,IAAI,EAAE,KAAKuB,oBAAL,CAA0BvB,KAA1B;AAPR,SAQM,KAAKwB,2BAAL,CAAiCxB,KAAjC,CARN;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAYD;;;+BAEUW,S,EAAW;AAAA;;AAAA,kCACL,KAAKc,mBAAL,CAAyBd,SAAzB,CADK;AAAA;AAAA,UACbS,CADa;AAAA,UACVC,CADU;;AAEpB,aACE,oBAAC,CAAD;AAAG,QAAA,GAAG,EAAEV,SAAR;AAAmB,QAAA,CAAC,EAAES,CAAtB;AAAyB,QAAA,CAAC,EAAEC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,SACG9D,CAAC,CAACmE,KAAF,CAAQjE,YAAR,EAAsBkE,GAAtB,CAA0B,UAAAb,QAAQ;AAAA,eACjC,MAAI,CAACc,YAAL,CAAkBd,QAAlB,EAA4BH,SAAS,GAAGlD,YAAZ,GAA2BqD,QAAvD,CADiC;AAAA,OAAlC,CADH,CADF;AAOD;;;qCAEgB;AAAA;;AACf,aAAOvD,CAAC,CAACmE,KAAF,CAAQ,KAAKjC,YAAL,EAAR,EAA6BkC,GAA7B,CAAiC,UAAAhB,SAAS;AAAA,eAC/C,MAAI,CAACkB,UAAL,CAAgBlB,SAAhB,CAD+C;AAAA,OAA1C,CAAP;AAGD;;;wCAEmB;AAAA;;AAClB,UAAI,CAAC,KAAKxC,KAAL,CAAWS,eAAhB,EAAiC;AAC/B,eAAO,IAAP;AACD;;AACD,UAAMkD,SAAS,GAAGvE,CAAC,CAACmE,KAAF,CAAQ,KAAKjC,YAAL,KAAsB,CAA9B,CAAlB;;AACA,aAAOqC,SAAS,CAACH,GAAV,CAAc,UAAAhB,SAAS,EAAI;AAChC,YAAMoB,SAAS,GAAGnE,SAAS,CACzB,MAAI,CAACsC,yBAAL,EADyB,EAEzB,CAACS,SAAS,GAAG,CAAb,IAAkBlD,YAFO,CAA3B;;AADgC,oCAKjB,MAAI,CAACuE,wBAAL,CAA8BrB,SAA9B,CALiB;AAAA;AAAA,YAKzBS,CALyB;AAAA,YAKtBC,CALsB;;AAMhC,eAAOU,SAAS,CAACE,OAAV,MAAuB,CAAvB,IAA4BF,SAAS,CAACE,OAAV,MAAuBxE,YAAnD,GACL,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEkD,SADP;AAEE,UAAA,CAAC,EAAES,CAAC,GAAGnD,WAFT;AAGE,UAAA,CAAC,EAAEoD,CAAC,GAAG;AAHT,WAIM,MAAI,CAACa,iBAAL,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YAMGvE,YAAY,CAACoE,SAAS,CAACI,QAAV,EAAD,CANf,CADK,GASH,IATJ;AAUD,OAhBM,CAAP;AAiBD;;;6BAEQ;AAAA,8BACgB,KAAKhE,KADrB,CACCiE,KADD;AAAA,UACCA,KADD,kCACS,EADT;AAAA,gCAEoBA,KAFpB,CAEDC,YAFC;AAAA,UAEDA,YAFC,oCAEc,CAFd;;AAGP,UAAI,CAACA,YAAD,IAAiB,KAAKlE,KAAL,CAAWsC,WAAX,CAAuB2B,KAA5C,EAAmD;AACjD,YAAME,QAAQ,GAAG,KAAKnE,KAAL,CAAWsC,WAAX,CAAuB2B,KAAvB,CAA6BC,YAA9C;AACAA,QAAAA,YAAY,GAAGC,QAAf;AACD;;AACD,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAKjE,KAAL,CAAWoE,MAAxB;AAAgC,QAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWqE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL;AACCD,QAAAA,KAAK,EAAE,KAAKrE,KAAL,CAAWqE,KADnB;AAECD,QAAAA,MAAM,EAAE,KAAKpE,KAAL,CAAWoE;AAFpB,SAGI,KAAKpE,KAAL,CAAWsC,WAHf,EADH,EAME,oBAAC,IAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAE,KAAKtC,KAAL,CAAWoE,MAFrB;AAGE,QAAA,EAAE,EAAEF,YAHN;AAIE,QAAA,EAAE,EAAEA,YAJN;AAKE,QAAA,IAAI,EAAC,0BALP;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAaE,oBAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKK,iBAAL,EAAJ,CAbF,EAcE,oBAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,cAAL,EAAJ,CAdF,CADF,CADF;AAoBD;;;;EAxR6BnF,a;;AA2RhCU,iBAAiB,CAAC0E,aAAlB,GAAkC;AAChCrE,EAAAA,MAAM,EAAErB,SAAS,CAAC2F,OAAV,CAEN3F,SAAS,CAAC4F,KAAV,CAAgB;AACd/C,IAAAA,IAAI,EAAE7C,SAAS,CAAC6F,SAAV,CAAoB,CACxB7F,SAAS,CAAC8F,MADc,EAExB9F,SAAS,CAAC+F,MAFc,EAGxB/F,SAAS,CAACgG,UAAV,CAAqBC,IAArB,CAHwB,CAApB,EAIHC;AALW,GAAhB,EAMGA,UARG,EASNA,UAV8B;AAWhCrE,EAAAA,OAAO,EAAE7B,SAAS,CAAC+F,MAXa;AAYhCjE,EAAAA,OAAO,EAAE9B,SAAS,CAAC6F,SAAV,CAAoB,CAC3B7F,SAAS,CAAC8F,MADiB,EAE3B9F,SAAS,CAAC+F,MAFiB,EAG3B/F,SAAS,CAACgG,UAAV,CAAqBC,IAArB,CAH2B,CAApB,CAZuB;AAiBhCxE,EAAAA,UAAU,EAAEzB,SAAS,CAAC+F,MAjBU;AAkBhCvE,EAAAA,UAAU,EAAExB,SAAS,CAAC+F,MAlBU;AAmBhCpE,EAAAA,UAAU,EAAE3B,SAAS,CAACmG,IAnBU;AAoBhCzE,EAAAA,eAAe,EAAE1B,SAAS,CAACmG,IApBK;AAqBhCnC,EAAAA,kBAAkB,EAAEhE,SAAS,CAACmG,IArBE;AAsBhChD,EAAAA,gBAAgB,EAAEnD,SAAS,CAAC6F,SAAV,CAAoB,CAAC7F,SAAS,CAACoG,MAAX,EAAmBpG,SAAS,CAACqG,IAA7B,CAApB,CAtBc;AAuBhCnD,EAAAA,aAAa,EAAElD,SAAS,CAACqG,IAvBO;AAwBhCC,EAAAA,aAAa,EAAEtG,SAAS,CAACqG,IAxBO;AAyBhCvC,EAAAA,OAAO,EAAE9D,SAAS,CAACqG;AAzBa,CAAlC;AA4BArF,iBAAiB,CAACuF,YAAlB,GAAiC;AAC/B1E,EAAAA,OAAO,EAAE,GADsB;AAE/BC,EAAAA,OAAO,EAAE,IAAImE,IAAJ,EAFsB;AAG/BxE,EAAAA,UAAU,EAAE,CAHmB;AAI/BD,EAAAA,UAAU,EAAEX,WAJmB;AAK/Bc,EAAAA,UAAU,EAAE,IALmB;AAM/BD,EAAAA,eAAe,EAAE,IANc;AAO/BsC,EAAAA,kBAAkB,EAAE,KAPW;AAQ/BsC,EAAAA,aAAa,EAAE,uBAAA1D,KAAK;AAAA,WAAKA,KAAK,GAAG,OAAH,GAAa,SAAvB;AAAA;AARW,CAAjC;AAWA,eAAe5B,iBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\nimport { Svg, G, Text, Rect } from \"react-native-svg\";\nimport _ from \"lodash\";\nimport AbstractChart from \"../abstract-chart\";\nimport {\n  DAYS_IN_WEEK,\n  MILLISECONDS_IN_ONE_DAY,\n  MONTH_LABELS\n} from \"./constants\";\nimport {\n  shiftDate,\n  getBeginningTimeForDate,\n  convertToDate\n} from \"./dateHelpers\";\n\nconst SQUARE_SIZE = 20;\nconst MONTH_LABEL_GUTTER_SIZE = 8;\nconst paddingLeft = 32;\nclass ContributionGraph extends AbstractChart {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueCache: this.getValueCache(props.values)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      valueCache: this.getValueCache(nextProps.values)\n    });\n  }\n\n  getSquareSizeWithGutter() {\n    return (this.props.squareSize || SQUARE_SIZE) + this.props.gutterSize;\n  }\n\n  getMonthLabelSize() {\n    let { squareSize = SQUARE_SIZE } = this.props;\n    if (!this.props.showMonthLabels) {\n      return 0;\n    }\n    if (this.props.horizontal) {\n      return squareSize + MONTH_LABEL_GUTTER_SIZE;\n    }\n    return 2 * (squareSize + MONTH_LABEL_GUTTER_SIZE);\n  }\n\n  getStartDate() {\n    return shiftDate(this.getEndDate(), -this.props.numDays + 1); // +1 because endDate is inclusive\n  }\n\n  getEndDate() {\n    return getBeginningTimeForDate(convertToDate(this.props.endDate));\n  }\n\n  getStartDateWithEmptyDays() {\n    return shiftDate(this.getStartDate(), -this.getNumEmptyDaysAtStart());\n  }\n\n  getNumEmptyDaysAtStart() {\n    return this.getStartDate().getDay();\n  }\n\n  getNumEmptyDaysAtEnd() {\n    return DAYS_IN_WEEK - 1 - this.getEndDate().getDay();\n  }\n\n  getWeekCount() {\n    const numDaysRoundedToWeek =\n      this.props.numDays +\n      this.getNumEmptyDaysAtStart() +\n      this.getNumEmptyDaysAtEnd();\n    return Math.ceil(numDaysRoundedToWeek / DAYS_IN_WEEK);\n  }\n\n  getWeekWidth() {\n    return DAYS_IN_WEEK * this.getSquareSizeWithGutter();\n  }\n\n  getWidth() {\n    return (\n      this.getWeekCount() * this.getSquareSizeWithGutter() -\n      this.props.gutterSize\n    );\n  }\n\n  getHeight() {\n    return (\n      this.getWeekWidth() + (this.getMonthLabelSize() - this.props.gutterSize)\n    );\n  }\n\n  getValueCache(values) {\n    return values.reduce((memo, value) => {\n      const date = convertToDate(value.date);\n      const index = Math.floor(\n        (date - this.getStartDateWithEmptyDays()) / MILLISECONDS_IN_ONE_DAY\n      );\n      memo[index] = {\n        value,\n        title: this.props.titleForValue\n          ? this.props.titleForValue(value)\n          : null,\n        tooltipDataAttrs: this.getTooltipDataAttrsForValue(value)\n      };\n      return memo;\n    }, {});\n  }\n\n  getValueForIndex(index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].value;\n    }\n    return null;\n  }\n\n  getClassNameForIndex(index) {\n    if (this.state.valueCache[index]) {\n      if (this.state.valueCache[index].value) {\n        const count = this.state.valueCache[index].value.count;\n        if (count) {\n          const opacity = (count * 0.15 > 1 ? 1 : count * 0.15) + 0.15;\n          return this.props.chartConfig.color(opacity);\n        }\n      }\n    }\n    return this.props.chartConfig.color(0.15);\n  }\n\n  getTitleForIndex(index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].title;\n    }\n    return this.props.titleForValue ? this.props.titleForValue(null) : null;\n  }\n\n  getTooltipDataAttrsForIndex(index) {\n    if (this.state.valueCache[index]) {\n      return this.state.valueCache[index].tooltipDataAttrs;\n    }\n    return this.getTooltipDataAttrsForValue({ date: null, count: null });\n  }\n\n  getTooltipDataAttrsForValue(value) {\n    const { tooltipDataAttrs } = this.props;\n\n    if (typeof tooltipDataAttrs === \"function\") {\n      return tooltipDataAttrs(value);\n    }\n    return tooltipDataAttrs;\n  }\n\n  getTransformForWeek(weekIndex) {\n    if (this.props.horizontal) {\n      return [weekIndex * this.getSquareSizeWithGutter(), 50];\n    }\n    return [10, weekIndex * this.getSquareSizeWithGutter()];\n  }\n\n  getTransformForMonthLabels() {\n    if (this.props.horizontal) {\n      return null;\n    }\n    return `${this.getWeekWidth() + MONTH_LABEL_GUTTER_SIZE}, 0`;\n  }\n\n  getTransformForAllWeeks() {\n    if (this.props.horizontal) {\n      return `0, ${this.getMonthLabelSize() - 100}`;\n    }\n    return null;\n  }\n\n  getViewBox() {\n    if (this.props.horizontal) {\n      return `${this.getWidth()} ${this.getHeight()}`;\n    }\n    return `${this.getHeight()} ${this.getWidth()}`;\n  }\n\n  getSquareCoordinates(dayIndex) {\n    if (this.props.horizontal) {\n      return [0, dayIndex * this.getSquareSizeWithGutter()];\n    }\n    return [dayIndex * this.getSquareSizeWithGutter(), 0];\n  }\n\n  getMonthLabelCoordinates(weekIndex) {\n    if (this.props.horizontal) {\n      return [\n        weekIndex * this.getSquareSizeWithGutter(),\n        this.getMonthLabelSize() - MONTH_LABEL_GUTTER_SIZE\n      ];\n    }\n    const verticalOffset = -2;\n    return [\n      0,\n      (weekIndex + 1) * this.getSquareSizeWithGutter() + verticalOffset\n    ];\n  }\n\n  handleClick(value) {\n    if (this.props.onClick) {\n      this.props.onClick(value);\n    }\n  }\n\n  renderSquare(dayIndex, index) {\n    const indexOutOfRange =\n      index < this.getNumEmptyDaysAtStart() ||\n      index >= this.getNumEmptyDaysAtStart() + this.props.numDays;\n    if (indexOutOfRange && !this.props.showOutOfRangeDays) {\n      return null;\n    }\n    const [x, y] = this.getSquareCoordinates(dayIndex);\n    const { squareSize = SQUARE_SIZE } = this.props;\n    return (\n      <Rect\n        key={index}\n        width={squareSize}\n        height={squareSize}\n        x={x + paddingLeft}\n        y={y}\n        title={this.getTitleForIndex(index)}\n        fill={this.getClassNameForIndex(index)}\n        {...this.getTooltipDataAttrsForIndex(index)}\n      />\n    );\n  }\n\n  renderWeek(weekIndex) {\n    const [x, y] = this.getTransformForWeek(weekIndex);\n    return (\n      <G key={weekIndex} x={x} y={y}>\n        {_.range(DAYS_IN_WEEK).map(dayIndex =>\n          this.renderSquare(dayIndex, weekIndex * DAYS_IN_WEEK + dayIndex)\n        )}\n      </G>\n    );\n  }\n\n  renderAllWeeks() {\n    return _.range(this.getWeekCount()).map(weekIndex =>\n      this.renderWeek(weekIndex)\n    );\n  }\n\n  renderMonthLabels() {\n    if (!this.props.showMonthLabels) {\n      return null;\n    }\n    const weekRange = _.range(this.getWeekCount() - 1); // don't render for last week, because label will be cut off\n    return weekRange.map(weekIndex => {\n      const endOfWeek = shiftDate(\n        this.getStartDateWithEmptyDays(),\n        (weekIndex + 1) * DAYS_IN_WEEK\n      );\n      const [x, y] = this.getMonthLabelCoordinates(weekIndex);\n      return endOfWeek.getDate() >= 1 && endOfWeek.getDate() <= DAYS_IN_WEEK ? (\n        <Text\n          key={weekIndex}\n          x={x + paddingLeft}\n          y={y + 8}\n          {...this.getPropsForLabels()}\n        >\n          {MONTH_LABELS[endOfWeek.getMonth()]}\n        </Text>\n      ) : null;\n    });\n  }\n\n  render() {\n    const { style = {} } = this.props;\n    let { borderRadius = 0 } = style;\n    if (!borderRadius && this.props.chartConfig.style) {\n      const stupidXo = this.props.chartConfig.style.borderRadius;\n      borderRadius = stupidXo;\n    }\n    return (\n      <View style={style}>\n        <Svg height={this.props.height} width={this.props.width}>\n          {this.renderDefs({\n            width: this.props.width,\n            height: this.props.height,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>{this.renderMonthLabels()}</G>\n          <G>{this.renderAllWeeks()}</G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nContributionGraph.ViewPropTypes = {\n  values: PropTypes.arrayOf(\n    // array of objects with date and arbitrary metadata\n    PropTypes.shape({\n      date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.instanceOf(Date)\n      ]).isRequired\n    }).isRequired\n  ).isRequired,\n  numDays: PropTypes.number, // number of days back from endDate to show\n  endDate: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Date)\n  ]), // end of date range\n  gutterSize: PropTypes.number, // size of space between squares\n  squareSize: PropTypes.number, // size of squares\n  horizontal: PropTypes.bool, // whether to orient horizontally or vertically\n  showMonthLabels: PropTypes.bool, // whether to show month labels\n  showOutOfRangeDays: PropTypes.bool, // whether to render squares for extra days in week after endDate, and before start date\n  tooltipDataAttrs: PropTypes.oneOfType([PropTypes.object, PropTypes.func]), // data attributes to add to square for setting 3rd party tooltips, e.g. { 'data-toggle': 'tooltip' } for bootstrap tooltips\n  titleForValue: PropTypes.func, // function which returns title text for value\n  classForValue: PropTypes.func, // function which returns html class for value\n  onClick: PropTypes.func // callback function when a square is clicked\n};\n\nContributionGraph.defaultProps = {\n  numDays: 200,\n  endDate: new Date(),\n  gutterSize: 1,\n  squareSize: SQUARE_SIZE,\n  horizontal: true,\n  showMonthLabels: true,\n  showOutOfRangeDays: false,\n  classForValue: value => (value ? \"black\" : \"#8cc665\")\n};\n\nexport default ContributionGraph;\n"]},"metadata":{},"sourceType":"module"}