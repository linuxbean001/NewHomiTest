{"ast":null,"code":"var _jsxFileName = \"D:\\\\react project\\\\homiApp\\\\homi\\\\node_modules\\\\react-native-calendar-picker\\\\CalendarPicker\\\\Day.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nimport { Utils } from \"./Utils\";\nimport moment from 'moment';\nexport default function Day(props) {\n  var day = props.day,\n      month = props.month,\n      year = props.year,\n      styles = props.styles,\n      customDatesStyles = props.customDatesStyles,\n      onPressDay = props.onPressDay,\n      selectedStartDate = props.selectedStartDate,\n      selectedEndDate = props.selectedEndDate,\n      allowRangeSelection = props.allowRangeSelection,\n      selectedDayStyle = props.selectedDayStyle,\n      selectedRangeStartStyle = props.selectedRangeStartStyle,\n      selectedRangeStyle = props.selectedRangeStyle,\n      selectedRangeEndStyle = props.selectedRangeEndStyle,\n      textStyle = props.textStyle,\n      todayTextStyle = props.todayTextStyle,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledDates = props.disabledDates,\n      disabledDatesTextStyle = props.disabledDatesTextStyle,\n      minRangeDuration = props.minRangeDuration,\n      maxRangeDuration = props.maxRangeDuration,\n      enableDateChange = props.enableDateChange;\n  var thisDay = moment({\n    year: year,\n    month: month,\n    day: day\n  });\n  var today = moment();\n  var dateOutOfRange;\n  var daySelectedStyle = styles.dayButton;\n  var selectedDayColorStyle = {};\n  var propSelectedDayStyle;\n  var dateIsBeforeMin = false;\n  var dateIsAfterMax = false;\n  var dateIsDisabled = false;\n  var dateIsBeforeMinDuration = false;\n  var dateIsAfterMaxDuration = false;\n  var customContainerStyle, customDateStyle, customTextStyle;\n\n  if (maxDate) {\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\n  }\n\n  if (minDate) {\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\n  }\n\n  if (disabledDates) {\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\n      dateIsDisabled = true;\n    } else if (disabledDates instanceof Function) {\n      dateIsDisabled = disabledDates(thisDay);\n    }\n  }\n\n  if (allowRangeSelection && minRangeDuration && selectedStartDate && thisDay.isAfter(moment(selectedStartDate), 'day')) {\n    if (Array.isArray(minRangeDuration)) {\n      var i = minRangeDuration.findIndex(function (i) {\n        return moment(i.date).isSame(moment(selectedStartDate, 'day'));\n      });\n\n      if (i >= 0 && moment(selectedStartDate).add(minRangeDuration[i].minDuration, 'day').isAfter(thisDay, 'day')) {\n        dateIsBeforeMinDuration = true;\n      }\n    } else if (moment(selectedStartDate).add(minRangeDuration, 'day').isAfter(thisDay, 'day')) {\n      dateIsBeforeMinDuration = true;\n    }\n  }\n\n  if (allowRangeSelection && maxRangeDuration && selectedStartDate && thisDay.isAfter(moment(selectedStartDate), 'day')) {\n    if (Array.isArray(maxRangeDuration)) {\n      var _i = maxRangeDuration.findIndex(function (i) {\n        return moment(i.date).isSame(moment(selectedStartDate, 'day'));\n      });\n\n      if (_i >= 0 && moment(selectedStartDate).add(maxRangeDuration[_i].maxDuration, 'day').isBefore(thisDay, 'day')) {\n        dateIsAfterMaxDuration = true;\n      }\n    } else if (moment(selectedStartDate).add(maxRangeDuration, 'day').isBefore(thisDay, 'day')) {\n      dateIsAfterMaxDuration = true;\n    }\n  }\n\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateIsBeforeMinDuration || dateIsAfterMaxDuration;\n\n  if (!dateOutOfRange) {\n    var isToday = thisDay.isSame(today, 'day');\n\n    if (isToday) {\n      daySelectedStyle = styles.selectedToday;\n      selectedDayColorStyle = todayTextStyle || styles.selectedDayLabel;\n    }\n\n    for (var _iterator = customDatesStyles, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i2 >= _iterator.length) break;\n        _ref = _iterator[_i2++];\n      } else {\n        _i2 = _iterator.next();\n        if (_i2.done) break;\n        _ref = _i2.value;\n      }\n\n      var _cds = _ref;\n\n      if (thisDay.isSame(moment(_cds.date), 'day')) {\n        customContainerStyle = _cds.containerStyle;\n        customDateStyle = _cds.style;\n        customTextStyle = _cds.textStyle;\n\n        if (isToday && customDateStyle) {\n          daySelectedStyle = [daySelectedStyle, customDateStyle];\n        }\n\n        break;\n      }\n    }\n\n    var isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\n    var isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\n\n    if (!allowRangeSelection && selectedStartDate && isThisDaySameAsSelectedStart) {\n      daySelectedStyle = styles.selectedDay;\n      selectedDayColorStyle = [styles.selectedDayLabel, isToday && todayTextStyle];\n      propSelectedDayStyle = selectedDayStyle || styles.selectedDayBackground;\n    }\n\n    if (allowRangeSelection) {\n      if (selectedStartDate && selectedEndDate) {\n        if (isThisDaySameAsSelectedStart) {\n          daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n\n        if (isThisDaySameAsSelectedEnd) {\n          daySelectedStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n\n        if (isThisDaySameAsSelectedEnd && isThisDaySameAsSelectedStart && selectedEndDate.isSame(selectedStartDate, 'day')) {\n          daySelectedStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day')) {\n          daySelectedStyle = [styles.inRangeDay, selectedRangeStyle];\n          selectedDayColorStyle = styles.selectedDayLabel;\n        }\n      }\n\n      if (selectedStartDate && !selectedEndDate && isThisDaySameAsSelectedStart) {\n        daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\n        selectedDayColorStyle = styles.selectedDayLabel;\n      }\n    }\n\n    return React.createElement(View, {\n      style: [styles.dayWrapper, customContainerStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      }\n    }, React.createElement(TouchableOpacity, {\n      disabled: !enableDateChange,\n      style: [customDateStyle, daySelectedStyle, propSelectedDayStyle],\n      onPress: function onPress() {\n        return onPressDay(day);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      }\n    }, React.createElement(Text, {\n      style: [styles.dayLabel, textStyle, customTextStyle, selectedDayColorStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      }\n    }, day)));\n  } else {\n    return React.createElement(View, {\n      style: styles.dayWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      }\n    }, React.createElement(Text, {\n      style: [textStyle, styles.disabledText, disabledDatesTextStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      }\n    }, day));\n  }\n}\nDay.defaultProps = {\n  customDatesStyles: []\n};\nDay.propTypes = {\n  styles: PropTypes.shape({}),\n  day: PropTypes.number,\n  onPressDay: PropTypes.func,\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number])\n};","map":{"version":3,"sources":["D:/react project/homiApp/homi/node_modules/react-native-calendar-picker/CalendarPicker/Day.js"],"names":["React","PropTypes","Utils","moment","Day","props","day","month","year","styles","customDatesStyles","onPressDay","selectedStartDate","selectedEndDate","allowRangeSelection","selectedDayStyle","selectedRangeStartStyle","selectedRangeStyle","selectedRangeEndStyle","textStyle","todayTextStyle","minDate","maxDate","disabledDates","disabledDatesTextStyle","minRangeDuration","maxRangeDuration","enableDateChange","thisDay","today","dateOutOfRange","daySelectedStyle","dayButton","selectedDayColorStyle","propSelectedDayStyle","dateIsBeforeMin","dateIsAfterMax","dateIsDisabled","dateIsBeforeMinDuration","dateIsAfterMaxDuration","customContainerStyle","customDateStyle","customTextStyle","isAfter","isBefore","Array","isArray","indexOf","valueOf","Function","i","findIndex","date","isSame","add","minDuration","maxDuration","isToday","selectedToday","selectedDayLabel","cds","containerStyle","style","isThisDaySameAsSelectedStart","isThisDaySameAsSelectedEnd","selectedDay","selectedDayBackground","startDayWrapper","endDayWrapper","isBetween","inRangeDay","dayWrapper","dayLabel","disabledText","defaultProps","propTypes","shape","number","func","oneOfType","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { Utils } from './Utils';\r\nimport moment from 'moment';\r\n\r\nexport default function Day(props) {\r\n  const {\r\n    day,\r\n    month,\r\n    year,\r\n    styles,\r\n    customDatesStyles,\r\n    onPressDay,\r\n    selectedStartDate,\r\n    selectedEndDate,\r\n    allowRangeSelection,\r\n    selectedDayStyle,\r\n    selectedRangeStartStyle,\r\n    selectedRangeStyle,\r\n    selectedRangeEndStyle,\r\n    textStyle,\r\n    todayTextStyle,\r\n    minDate,\r\n    maxDate,\r\n    disabledDates,\r\n    disabledDatesTextStyle,\r\n    minRangeDuration,\r\n    maxRangeDuration,\r\n    enableDateChange\r\n  } = props;\r\n\r\n  const thisDay = moment({year, month, day});\r\n  const today = moment();\r\n\r\n  let dateOutOfRange;\r\n  let daySelectedStyle = styles.dayButton; // may be overridden depending on state\r\n  let selectedDayColorStyle = {};\r\n  let propSelectedDayStyle;\r\n  let dateIsBeforeMin = false;\r\n  let dateIsAfterMax = false;\r\n  let dateIsDisabled = false;\r\n  let dateIsBeforeMinDuration = false;\r\n  let dateIsAfterMaxDuration = false;\r\n  let customContainerStyle, customDateStyle, customTextStyle;\r\n\r\n  // First let's check if date is out of range\r\n  // Check whether props maxDate / minDate are defined. If not supplied,\r\n  // don't restrict dates.\r\n  if (maxDate) {\r\n    dateIsAfterMax = thisDay.isAfter(maxDate, 'day');\r\n  }\r\n  if (minDate) {\r\n    dateIsBeforeMin = thisDay.isBefore(minDate, 'day');\r\n  }\r\n\r\n  if (disabledDates) {\r\n    if (Array.isArray(disabledDates) && disabledDates.indexOf(thisDay.valueOf()) >= 0) {\r\n      dateIsDisabled = true;\r\n    }\r\n    else if (disabledDates instanceof Function) {\r\n      dateIsDisabled = disabledDates(thisDay);\r\n    }\r\n  }\r\n\r\n  if (allowRangeSelection && minRangeDuration && selectedStartDate && thisDay.isAfter(moment(selectedStartDate), 'day') ) {\r\n    if (Array.isArray(minRangeDuration)) {\r\n      let i = minRangeDuration.findIndex(i => moment(i.date).isSame(moment(selectedStartDate, 'day')) );\r\n      if (i >= 0 && moment(selectedStartDate).add(minRangeDuration[i].minDuration, 'day').isAfter(thisDay, 'day') ) {\r\n        dateIsBeforeMinDuration = true;\r\n      }\r\n    } else if(moment(selectedStartDate).add(minRangeDuration, 'day').isAfter(thisDay, 'day')) {\r\n      dateIsBeforeMinDuration = true;\r\n    }\r\n  }\r\n\r\n\tif (allowRangeSelection && maxRangeDuration && selectedStartDate && thisDay.isAfter(moment(selectedStartDate), 'day') ) {\r\n\t\tif (Array.isArray(maxRangeDuration)) {\r\n\t\t\tlet i = maxRangeDuration.findIndex(i => moment(i.date).isSame(moment(selectedStartDate, 'day')) );\r\n\t\t\tif (i >= 0 && moment(selectedStartDate).add(maxRangeDuration[i].maxDuration, 'day').isBefore(thisDay, 'day') ) {\r\n\t\t\t\tdateIsAfterMaxDuration = true;\r\n\t\t\t}\r\n    } else if(moment(selectedStartDate).add(maxRangeDuration, 'day').isBefore(thisDay, 'day')) {\r\n\t\t\tdateIsAfterMaxDuration = true;\r\n\t\t}\r\n\t}\r\n\r\n  dateOutOfRange = dateIsAfterMax || dateIsBeforeMin || dateIsDisabled || dateIsBeforeMinDuration || dateIsAfterMaxDuration;\r\n\r\n  // If date is in range let's apply styles\r\n  if (!dateOutOfRange) {\r\n    // set today's style\r\n    let isToday = thisDay.isSame(today, 'day');\r\n    if (isToday) {\r\n      daySelectedStyle = styles.selectedToday;\r\n      // todayTextStyle prop overrides selectedDayTextColor (created via makeStyles)\r\n      selectedDayColorStyle = todayTextStyle || styles.selectedDayLabel;\r\n    }\r\n\r\n    for (let cds of customDatesStyles) {\r\n      if (thisDay.isSame(moment(cds.date), 'day')) {\r\n        customContainerStyle = cds.containerStyle;\r\n        customDateStyle = cds.style;\r\n        customTextStyle = cds.textStyle;\r\n        if (isToday && customDateStyle) {\r\n          // Custom date style overrides 'today' style. It may be reset below\r\n          // by date selection styling.\r\n          daySelectedStyle = [daySelectedStyle, customDateStyle];\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    let isThisDaySameAsSelectedStart = thisDay.isSame(selectedStartDate, 'day');\r\n    let isThisDaySameAsSelectedEnd = thisDay.isSame(selectedEndDate, 'day');\r\n\r\n    // set selected day style\r\n    if (!allowRangeSelection &&\r\n        selectedStartDate &&\r\n        isThisDaySameAsSelectedStart) {\r\n      daySelectedStyle = styles.selectedDay;\r\n      selectedDayColorStyle = [styles.selectedDayLabel, isToday && todayTextStyle];\r\n      // selectedDayStyle prop overrides selectedDayColor (created via makeStyles)\r\n      propSelectedDayStyle = selectedDayStyle || styles.selectedDayBackground;\r\n    }\r\n\r\n    // Set selected ranges styles\r\n    if (allowRangeSelection) {\r\n      if (selectedStartDate && selectedEndDate) {\r\n          // Apply style for start date\r\n        if (isThisDaySameAsSelectedStart) {\r\n          daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n        // Apply style for end date\r\n        if (isThisDaySameAsSelectedEnd) {\r\n          daySelectedStyle = [styles.endDayWrapper, selectedRangeStyle, selectedRangeEndStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n        // Apply style if start date is the same as end date\r\n        if (isThisDaySameAsSelectedEnd &&\r\n            isThisDaySameAsSelectedStart &&\r\n            selectedEndDate.isSame(selectedStartDate, 'day')) {\r\n            daySelectedStyle = [styles.selectedDay, styles.selectedDayBackground, selectedRangeStyle];\r\n            selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n        // Apply style if this day is in range\r\n        if (thisDay.isBetween(selectedStartDate, selectedEndDate, 'day')) {\r\n          daySelectedStyle = [styles.inRangeDay, selectedRangeStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n        }\r\n      }\r\n      // Apply style if start date has been selected but end date has not\r\n      if (selectedStartDate &&\r\n          !selectedEndDate &&\r\n          isThisDaySameAsSelectedStart) {\r\n          daySelectedStyle = [styles.startDayWrapper, selectedRangeStyle, selectedRangeStartStyle];\r\n          selectedDayColorStyle = styles.selectedDayLabel;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <View style={[styles.dayWrapper, customContainerStyle]}>\r\n        <TouchableOpacity\r\n          disabled={!enableDateChange}\r\n          style={[customDateStyle, daySelectedStyle, propSelectedDayStyle ]}\r\n          onPress={() => onPressDay(day) }>\r\n          <Text style={[styles.dayLabel, textStyle, customTextStyle, selectedDayColorStyle]}>\r\n            { day }\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  else {  // dateOutOfRange = true\r\n    return (\r\n      <View style={styles.dayWrapper}>\r\n        <Text style={[textStyle, styles.disabledText, disabledDatesTextStyle]}>\r\n          { day }\r\n        </Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nDay.defaultProps = {\r\n  customDatesStyles: [],\r\n}\r\n\r\nDay.propTypes = {\r\n  styles: PropTypes.shape({}),\r\n  day: PropTypes.number,\r\n  onPressDay: PropTypes.func,\r\n  disabledDates: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\r\n  minRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n  maxRangeDuration: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n}\r\n"]},"metadata":{},"sourceType":"module"}