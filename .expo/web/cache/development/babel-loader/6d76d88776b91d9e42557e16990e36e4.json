{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"D:\\\\react project\\\\homiApp\\\\homi\\\\node_modules\\\\react-native-calendar-picker\\\\CalendarPicker\\\\HeaderControls.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from 'prop-types';\nimport { Utils } from \"./Utils\";\nimport Controls from \"./Controls\";\n\nfunction isSameMonthAndYear(date, month, year) {\n  if (date) {\n    return date.month() === month && date.year() === year;\n  }\n\n  return false;\n}\n\nexport default function HeaderControls(props) {\n  var styles = props.styles,\n      currentMonth = props.currentMonth,\n      currentYear = props.currentYear,\n      onPressNext = props.onPressNext,\n      onPressPrevious = props.onPressPrevious,\n      months = props.months,\n      previousTitle = props.previousTitle,\n      nextTitle = props.nextTitle,\n      textStyle = props.textStyle,\n      restrictMonthNavigation = props.restrictMonthNavigation,\n      maxDate = props.maxDate,\n      minDate = props.minDate,\n      headingLevel = props.headingLevel,\n      previousTitleStyle = props.previousTitleStyle,\n      nextTitleStyle = props.nextTitleStyle;\n  var MONTHS = months ? months : Utils.MONTHS;\n  var previous = previousTitle ? previousTitle : 'Previous';\n  var next = nextTitle ? nextTitle : 'Next';\n  var month = MONTHS[currentMonth];\n  var year = currentYear;\n  var disablePreviousMonth = restrictMonthNavigation && isSameMonthAndYear(minDate, currentMonth, currentYear);\n  var disableNextMonth = restrictMonthNavigation && isSameMonthAndYear(maxDate, currentMonth, currentYear);\n  var accessibilityProps = {\n    accessibilityRole: 'header'\n  };\n\n  if (Platform.OS === 'web') {\n    accessibilityProps['aria-level'] = headingLevel;\n  }\n\n  return React.createElement(View, {\n    style: styles.headerWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    }\n  }, React.createElement(Controls, {\n    disabled: disablePreviousMonth,\n    label: previous,\n    onPressControl: onPressPrevious,\n    styles: [styles.monthSelector, styles.prev],\n    textStyles: [textStyle, previousTitleStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }, React.createElement(Text, _extends({\n    style: [styles.monthLabel, textStyle]\n  }, accessibilityProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }), month, \" \", year)), React.createElement(Controls, {\n    disabled: disableNextMonth,\n    label: next,\n    onPressControl: onPressNext,\n    styles: [styles.monthSelector, styles.next],\n    textStyles: [textStyle, nextTitleStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }));\n}\nHeaderControls.propTypes = {\n  currentMonth: PropTypes.number,\n  currentYear: PropTypes.number,\n  onPressNext: PropTypes.func,\n  onPressPrevious: PropTypes.func\n};","map":{"version":3,"sources":["D:/react project/homiApp/homi/node_modules/react-native-calendar-picker/CalendarPicker/HeaderControls.js"],"names":["React","PropTypes","Utils","Controls","isSameMonthAndYear","date","month","year","HeaderControls","props","styles","currentMonth","currentYear","onPressNext","onPressPrevious","months","previousTitle","nextTitle","textStyle","restrictMonthNavigation","maxDate","minDate","headingLevel","previousTitleStyle","nextTitleStyle","MONTHS","previous","next","disablePreviousMonth","disableNextMonth","accessibilityProps","accessibilityRole","Platform","OS","headerWrapper","monthSelector","prev","monthLabel","propTypes","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Platform\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { Utils } from './Utils';\r\nimport Controls from './Controls';\r\n\r\nfunction isSameMonthAndYear(date, month, year) {\r\n  if (date) {\r\n    return date.month() === month && date.year() === year\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default function HeaderControls(props) {\r\n  const {\r\n    styles,\r\n    currentMonth,\r\n    currentYear,\r\n    onPressNext,\r\n    onPressPrevious,\r\n    months,\r\n    previousTitle,\r\n    nextTitle,\r\n    textStyle,\r\n    restrictMonthNavigation,\r\n    maxDate,\r\n    minDate,\r\n    headingLevel,\r\n    previousTitleStyle,\r\n    nextTitleStyle,\r\n  } = props;\r\n  const MONTHS = months? months : Utils.MONTHS; // English Month Array\r\n  // getMonth() call below will return the month number, we will use it as the\r\n  // index for month array in english\r\n  const previous = previousTitle ? previousTitle : 'Previous';\r\n  const next = nextTitle ? nextTitle : 'Next';\r\n  const month = MONTHS[currentMonth];\r\n  const year = currentYear;\r\n\r\n  const disablePreviousMonth = restrictMonthNavigation && isSameMonthAndYear(minDate, currentMonth, currentYear);\r\n  const disableNextMonth = restrictMonthNavigation && isSameMonthAndYear(maxDate, currentMonth, currentYear);\r\n\r\n  const accessibilityProps = { accessibilityRole: 'header' };\r\n  if (Platform.OS === 'web') {\r\n    accessibilityProps['aria-level'] = headingLevel;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.headerWrapper}>\r\n      <Controls\r\n        disabled={disablePreviousMonth}\r\n        label={previous}\r\n        onPressControl={onPressPrevious}\r\n        styles={[styles.monthSelector, styles.prev]}\r\n        textStyles={[textStyle, previousTitleStyle]}\r\n      />\r\n      <View>\r\n        <Text style={[styles.monthLabel, textStyle]} {...accessibilityProps}>\r\n           { month } { year }\r\n        </Text>\r\n      </View>\r\n      <Controls\r\n        disabled={disableNextMonth}\r\n        label={next}\r\n        onPressControl={onPressNext}\r\n        styles={[styles.monthSelector, styles.next]}\r\n        textStyles={[textStyle, nextTitleStyle]}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nHeaderControls.propTypes = {\r\n  currentMonth: PropTypes.number,\r\n  currentYear: PropTypes.number,\r\n  onPressNext: PropTypes.func,\r\n  onPressPrevious: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}