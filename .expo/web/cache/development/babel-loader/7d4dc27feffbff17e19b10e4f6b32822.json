{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"D:\\\\react project\\\\homiApp\\\\homi\\\\node_modules\\\\react-native-calendar-picker\\\\CalendarPicker\\\\Swiper.js\";\nimport React, { Component } from 'react';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nexport var swipeDirections = {\n  SWIPE_UP: 'SWIPE_UP',\n  SWIPE_DOWN: 'SWIPE_DOWN',\n  SWIPE_LEFT: 'SWIPE_LEFT',\n  SWIPE_RIGHT: 'SWIPE_RIGHT'\n};\nvar swipeConfig = {\n  velocityThreshold: 0.3,\n  directionalOffsetThreshold: 80\n};\n\nfunction isValidSwipe(velocity, velocityThreshold, directionalOffset, directionalOffsetThreshold) {\n  return Math.abs(velocity) > velocityThreshold && Math.abs(directionalOffset) < directionalOffsetThreshold;\n}\n\nvar Swiper = function (_Component) {\n  _inherits(Swiper, _Component);\n\n  function Swiper(props, context) {\n    var _this;\n\n    _classCallCheck(this, Swiper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Swiper).call(this, props, context));\n    _this.swipeConfig = _extends(swipeConfig, props.config);\n\n    var responderEnd = _this._handlePanResponderEnd.bind(_assertThisInitialized(_this));\n\n    var shouldSetResponder = _this._handleShouldSetPanResponder.bind(_assertThisInitialized(_this));\n\n    _this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: shouldSetResponder,\n      onMoveShouldSetPanResponder: shouldSetResponder,\n      onPanResponderRelease: responderEnd,\n      onPanResponderTerminate: responderEnd\n    });\n    return _this;\n  }\n\n  _createClass(Swiper, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.config !== this.props.config) {\n        this.swipeConfig = _extends(swipeConfig, this.props.config);\n      }\n    }\n  }, {\n    key: \"_handleShouldSetPanResponder\",\n    value: function _handleShouldSetPanResponder(evt, gestureState) {\n      return evt.nativeEvent.touches.length === 1 && !this._gestureIsClick(gestureState);\n    }\n  }, {\n    key: \"_gestureIsClick\",\n    value: function _gestureIsClick(gestureState) {\n      return Math.abs(gestureState.dx) < 5 && Math.abs(gestureState.dy) < 5;\n    }\n  }, {\n    key: \"_handlePanResponderEnd\",\n    value: function _handlePanResponderEnd(evt, gestureState) {\n      var swipeDirection = this._getSwipeDirection(gestureState);\n\n      this._triggerSwipeHandlers(swipeDirection, gestureState);\n    }\n  }, {\n    key: \"_triggerSwipeHandlers\",\n    value: function _triggerSwipeHandlers(swipeDirection, gestureState) {\n      var _this$props = this.props,\n          onSwipe = _this$props.onSwipe,\n          onSwipeUp = _this$props.onSwipeUp,\n          onSwipeDown = _this$props.onSwipeDown,\n          onSwipeLeft = _this$props.onSwipeLeft,\n          onSwipeRight = _this$props.onSwipeRight;\n      var SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT,\n          SWIPE_UP = swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = swipeDirections.SWIPE_DOWN;\n      onSwipe && onSwipe(swipeDirection, gestureState);\n\n      switch (swipeDirection) {\n        case SWIPE_LEFT:\n          onSwipeLeft && onSwipeLeft(gestureState);\n          break;\n\n        case SWIPE_RIGHT:\n          onSwipeRight && onSwipeRight(gestureState);\n          break;\n\n        case SWIPE_UP:\n          onSwipeUp && onSwipeUp(gestureState);\n          break;\n\n        case SWIPE_DOWN:\n          onSwipeDown && onSwipeDown(gestureState);\n          break;\n      }\n    }\n  }, {\n    key: \"_getSwipeDirection\",\n    value: function _getSwipeDirection(gestureState) {\n      var SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT,\n          SWIPE_UP = swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = swipeDirections.SWIPE_DOWN;\n      var dx = gestureState.dx,\n          dy = gestureState.dy;\n\n      if (this._isValidHorizontalSwipe(gestureState)) {\n        return dx > 0 ? SWIPE_RIGHT : SWIPE_LEFT;\n      } else if (this._isValidVerticalSwipe(gestureState)) {\n        return dy > 0 ? SWIPE_DOWN : SWIPE_UP;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_isValidHorizontalSwipe\",\n    value: function _isValidHorizontalSwipe(gestureState) {\n      var vx = gestureState.vx,\n          dy = gestureState.dy;\n      var _this$swipeConfig = this.swipeConfig,\n          velocityThreshold = _this$swipeConfig.velocityThreshold,\n          directionalOffsetThreshold = _this$swipeConfig.directionalOffsetThreshold;\n      return isValidSwipe(vx, velocityThreshold, dy, directionalOffsetThreshold);\n    }\n  }, {\n    key: \"_isValidVerticalSwipe\",\n    value: function _isValidVerticalSwipe(gestureState) {\n      var vy = gestureState.vy,\n          dx = gestureState.dx;\n      var _this$swipeConfig2 = this.swipeConfig,\n          velocityThreshold = _this$swipeConfig2.velocityThreshold,\n          directionalOffsetThreshold = _this$swipeConfig2.directionalOffsetThreshold;\n      return isValidSwipe(vy, velocityThreshold, dx, directionalOffsetThreshold);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({}, this.props, this._panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }));\n    }\n  }]);\n\n  return Swiper;\n}(Component);\n\nexport { Swiper as default };\n;","map":{"version":3,"sources":["D:/react project/homiApp/homi/node_modules/react-native-calendar-picker/CalendarPicker/Swiper.js"],"names":["React","Component","swipeDirections","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","swipeConfig","velocityThreshold","directionalOffsetThreshold","isValidSwipe","velocity","directionalOffset","Math","abs","Swiper","props","context","config","responderEnd","_handlePanResponderEnd","bind","shouldSetResponder","_handleShouldSetPanResponder","_panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderRelease","onPanResponderTerminate","prevProps","prevState","evt","gestureState","nativeEvent","touches","length","_gestureIsClick","dx","dy","swipeDirection","_getSwipeDirection","_triggerSwipeHandlers","onSwipe","onSwipeUp","onSwipeDown","onSwipeLeft","onSwipeRight","_isValidHorizontalSwipe","_isValidVerticalSwipe","vx","vy","panHandlers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  PanResponder,\r\n  View,\r\n} from 'react-native';\r\n\r\nexport const swipeDirections = {\r\n  SWIPE_UP: 'SWIPE_UP',\r\n  SWIPE_DOWN: 'SWIPE_DOWN',\r\n  SWIPE_LEFT: 'SWIPE_LEFT',\r\n  SWIPE_RIGHT: 'SWIPE_RIGHT'\r\n};\r\n\r\nconst swipeConfig = {\r\n  velocityThreshold: 0.3,\r\n  directionalOffsetThreshold: 80\r\n};\r\n\r\nfunction isValidSwipe(velocity, velocityThreshold, directionalOffset, directionalOffsetThreshold) {\r\n  return Math.abs(velocity) > velocityThreshold && Math.abs(directionalOffset) < directionalOffsetThreshold;\r\n}\r\n\r\nexport default class Swiper extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.swipeConfig = Object.assign(swipeConfig, props.config);\r\n\r\n    const responderEnd = this._handlePanResponderEnd.bind(this);\r\n    const shouldSetResponder = this._handleShouldSetPanResponder.bind(this);\r\n    this._panResponder = PanResponder.create({ //stop JS beautify collapse\r\n      onStartShouldSetPanResponder: shouldSetResponder,\r\n      onMoveShouldSetPanResponder: shouldSetResponder,\r\n      onPanResponderRelease: responderEnd,\r\n      onPanResponderTerminate: responderEnd\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.config !== this.props.config) {\r\n      this.swipeConfig = Object.assign(swipeConfig, this.props.config);\r\n    }\r\n  }\r\n\r\n  _handleShouldSetPanResponder(evt, gestureState) {\r\n    return evt.nativeEvent.touches.length === 1 && !this._gestureIsClick(gestureState);\r\n  }\r\n\r\n  _gestureIsClick(gestureState) {\r\n    return Math.abs(gestureState.dx) < 5  && Math.abs(gestureState.dy) < 5;\r\n  }\r\n\r\n  _handlePanResponderEnd(evt, gestureState) {\r\n    const swipeDirection = this._getSwipeDirection(gestureState);\r\n    this._triggerSwipeHandlers(swipeDirection, gestureState);\r\n  }\r\n\r\n  _triggerSwipeHandlers(swipeDirection, gestureState) {\r\n    const {onSwipe, onSwipeUp, onSwipeDown, onSwipeLeft, onSwipeRight} = this.props;\r\n    const {SWIPE_LEFT, SWIPE_RIGHT, SWIPE_UP, SWIPE_DOWN} = swipeDirections;\r\n    onSwipe && onSwipe(swipeDirection, gestureState);\r\n    switch (swipeDirection) {\r\n      case SWIPE_LEFT:\r\n        onSwipeLeft && onSwipeLeft(gestureState);\r\n        break;\r\n      case SWIPE_RIGHT:\r\n        onSwipeRight && onSwipeRight(gestureState);\r\n        break;\r\n      case SWIPE_UP:\r\n        onSwipeUp && onSwipeUp(gestureState);\r\n        break;\r\n      case SWIPE_DOWN:\r\n        onSwipeDown && onSwipeDown(gestureState);\r\n        break;\r\n    }\r\n  }\r\n\r\n  _getSwipeDirection(gestureState) {\r\n    const {SWIPE_LEFT, SWIPE_RIGHT, SWIPE_UP, SWIPE_DOWN} = swipeDirections;\r\n    const {dx, dy} = gestureState;\r\n    if (this._isValidHorizontalSwipe(gestureState)) {\r\n      return (dx > 0)\r\n        ? SWIPE_RIGHT\r\n        : SWIPE_LEFT;\r\n    } else if (this._isValidVerticalSwipe(gestureState)) {\r\n      return (dy > 0)\r\n        ? SWIPE_DOWN\r\n        : SWIPE_UP;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _isValidHorizontalSwipe(gestureState) {\r\n    const {vx, dy} = gestureState;\r\n    const {velocityThreshold, directionalOffsetThreshold} = this.swipeConfig;\r\n    return isValidSwipe(vx, velocityThreshold, dy, directionalOffsetThreshold);\r\n  }\r\n\r\n  _isValidVerticalSwipe(gestureState) {\r\n    const {vy, dx} = gestureState;\r\n    const {velocityThreshold, directionalOffsetThreshold} = this.swipeConfig;\r\n    return isValidSwipe(vy, velocityThreshold, dx, directionalOffsetThreshold);\r\n  }\r\n\r\n  render() {\r\n    return (<View {...this.props} {...this._panResponder.panHandlers}/>);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}